name: Deploy to Production

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            set -x  # Enable debug mode
            
            echo "=== ENVIRONMENT CHECK ==="
            pwd
            ls -la
            
            echo "=== CHANGING DIRECTORY ==="
            cd /opt/docker-game || {
              echo "Failed to change directory to /opt/docker-game"
              exit 1
            }
            
            echo "=== CURRENT STATE ==="
            pwd
            ls -la
            git status || echo "Not a git repository"
            
            echo "=== STOPPING AND CLEANING UP CONTAINERS ==="
            docker-compose -f docker-compose.prod.yml down --volumes --remove-orphans || true
            docker rm -f docker-game_web_1 || true
            docker system prune -f
            
            echo "=== UPDATING CODE ==="
            git fetch origin main || {
              echo "Failed to fetch from git"
              exit 1
            }
            git reset --hard origin/main || {
              echo "Failed to reset to main"
              exit 1
            }
            
            echo "=== CREATING REQUIRED DIRECTORIES ==="
            mkdir -p data logs
            chmod 777 data logs
            
            echo "=== DOCKER BUILD ==="
            docker-compose -f docker-compose.prod.yml build --no-cache 2>&1
            BUILD_STATUS=$?
            if [ $BUILD_STATUS -ne 0 ]; then
              echo "Docker build failed with status $BUILD_STATUS"
              docker-compose -f docker-compose.prod.yml logs
              exit 1
            fi
            
            echo "=== STARTING CONTAINER ==="
            docker-compose -f docker-compose.prod.yml up -d 2>&1
            START_STATUS=$?
            if [ $START_STATUS -ne 0 ]; then
              echo "Docker start failed with status $START_STATUS"
              docker-compose -f docker-compose.prod.yml logs
              exit 1
            fi
            
            echo "=== WAITING FOR STARTUP ==="
            sleep 10
            
            echo "=== CONTAINER STATUS ==="
            docker ps -a
            docker-compose -f docker-compose.prod.yml ps
            
            echo "=== CONTAINER LOGS ==="
            docker-compose -f docker-compose.prod.yml logs --tail=100
            
            echo "=== CHECKING NGINX ==="
            systemctl status nginx || echo "Nginx status check failed"
            
            echo "=== CHECKING APPLICATION ==="
            curl -v http://localhost:8000/health || echo "Health check failed"
            
            echo "=== DEPLOYMENT COMPLETE ===" 